/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 24000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("M[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("M[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("M[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("U[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("U[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("U[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("V[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("V[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("V[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("W[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("W[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("W[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("X[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("X[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("X[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Y[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Y[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Y[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Z[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Z[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Z[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("s0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("s1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("s2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("M[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 24000.0;
	}
}

TRANSITION_LIST("M[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 24000.0;
	}
}

TRANSITION_LIST("M[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 24000.0;
	}
}

TRANSITION_LIST("U[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 23040.0;
	}
}

TRANSITION_LIST("U[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 23040.0;
	}
}

TRANSITION_LIST("U[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 320.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 19840.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 2880.0;
	}
}

TRANSITION_LIST("V[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3200.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 17280.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 2880.0;
	}
}

TRANSITION_LIST("V[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3200.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 17280.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 2880.0;
	}
}

TRANSITION_LIST("V[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3200.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 14400.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 2240.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 320.0;
	}
}

TRANSITION_LIST("W[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6720.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 10560.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 2240.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 320.0;
	}
}

TRANSITION_LIST("W[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6720.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 10880.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 2240.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 320.0;
	}
}

TRANSITION_LIST("W[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6720.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 10560.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 2240.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 320.0;
	}
}

TRANSITION_LIST("X[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 9920.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 7360.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 2240.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 320.0;
	}
}

TRANSITION_LIST("X[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 9920.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 7360.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 2240.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 320.0;
	}
}

TRANSITION_LIST("X[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 9920.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 7360.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 2240.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 320.0;
	}
}

TRANSITION_LIST("Y[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 13760.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 3840.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 2240.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 320.0;
	}
}

TRANSITION_LIST("Y[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 13760.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 3840.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 2240.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 320.0;
	}
}

TRANSITION_LIST("Y[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 13760.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 3840.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 2240.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 320.0;
	}
}

TRANSITION_LIST("Z[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 13760.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 3840.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 2240.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 320.0;
	}
}

TRANSITION_LIST("Z[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 13760.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 3840.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 2240.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 320.0;
	}
}

TRANSITION_LIST("Z[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 13760.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 6720.0;
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 320.0;
	}
}

TRANSITION_LIST("s0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2560.0;
		LEVEL 1 FOR 2880.0;
		LEVEL 0 FOR 3840.0;
		LEVEL 1 FOR 3200.0;
		LEVEL 0 FOR 3200.0;
		LEVEL 1 FOR 4160.0;
		LEVEL 0 FOR 2880.0;
		LEVEL 1 FOR 1280.0;
	}
}

TRANSITION_LIST("s1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5760.0;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 3200.0;
		LEVEL 0 FOR 8000.0;
		LEVEL 1 FOR 1280.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 1280.0;
	}
}

TRANSITION_LIST("s2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 13120.0;
		LEVEL 1 FOR 10880.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "M[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "M[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "M[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "U[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "U[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "U[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "V[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "V[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "V[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "W[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "W[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "W[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "X[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "X[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "X[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Y[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Y[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Y[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Z[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Z[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Z[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "s0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 21;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "s1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "s2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 8000000;
	MASTER = TRUE;
}
;
